{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker application",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Documentation of the application \"Water Tracker\""
  },
  "servers": [
    {
      "url": "https://watertrackerbackend-5ymk.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations about -Auth"
    },
    {
      "name": "Users",
      "description": "Operations about -User"
    },
    {
      "name": "Water",
      "description": "Operations about -Water"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign up a new user",
        "operationId": "signupUser",
        "description": "Sign up a user with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSignup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User signed up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully signed up a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign in a user",
        "operationId": "signInUser",
        "description": "Sign in a user with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSignIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid email or password"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logs out the currently authenticated user by invalidating the session or token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully logged out"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh session for user",
        "operationId": "refreshSession",
        "description": "Get refresh session for user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user",
        "operationId": "getUser",
        "description": "Get user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "operationId": "updateUser",
        "description": "Updating a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "default": "test@test.com",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@example.com"
                  },
                  "dailyGoal": {
                    "description": "User's daily goal",
                    "type": "number",
                    "example": 220
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ]
                  },
                  "avatarURL": {
                    "description": "Link to user's avatar",
                    "type": "string",
                    "format": "url",
                    "example": "https://res.cloudinary.com/photo/image.png"
                  },
                  "oldPassword": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "Verystrongpassword1"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "Verystrongpassword1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/avatar": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user avatar",
        "operationId": "updateUserAvatar",
        "description": "Updating a user avatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatarURL": {
                    "description": "Link to user's avatar",
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/photo/image.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User avatar updated"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/water/entry": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add an entry about water",
        "operationId": "addWater",
        "description": "Add an entry about water intake with payload.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestEntry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an entry of water",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/responseEntry"
                    },
                    "message": {
                      "type": "string",
                      "example": "Water entry added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/entry/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update water entry",
        "operationId": "updateWaterEntry",
        "description": "Update water entry by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water entry updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/responseEntry"
                    },
                    "message": {
                      "type": "string",
                      "example": "Water entry updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete existing water entry",
        "operationId": "deleteWaterEntry",
        "description": "Delete existing water entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted a water entry"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/today": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get today data",
        "operationId": "TodayData",
        "description": "Return data for today.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User data for today",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Today data successfully found!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/today"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/month/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Monthly statistics",
        "operationId": "MonthlyStatistics",
        "description": "Return statistics for each day of the selected month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "description": "Date in format YYYY-MM",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-02"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of water entries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/month"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/daily-norma": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update daily water",
        "operationId": "UpdateDailyWater",
        "description": "Updating the user's daily water goal using their unique identifier.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dailyGoal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's daily goal successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated daily goal!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/dailyGoal"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "userSignup": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "maxLength": 64,
            "example": "Verystrongpassword1"
          }
        }
      },
      "userSignIn": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "maxLength": 64,
            "example": "Verystrongpassword1"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "name": {
            "description": "User's name",
            "default": "test@test.com",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "Users email",
            "type": "string",
            "example": "example@example.com"
          },
          "dailyGoal": {
            "description": "User's dailyGoal",
            "type": "number",
            "example": "220"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ]
          },
          "avatarURL": {
            "description": "Link to users's avatar",
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/photo/image.png"
          }
        }
      },
      "requestEntry": {
        "type": "object",
        "required": [
          "time"
        ],
        "properties": {
          "time": {
            "description": "Time of water intake",
            "type": "string",
            "format": "YYYY-MM-DD-HH:MM",
            "example": "1970-01-01-06:30"
          },
          "amount": {
            "description": "Amount of water intake",
            "type": "number",
            "minimum": 50,
            "maximum": 5000,
            "example": 330
          }
        }
      },
      "responseEntry": {
        "type": "object",
        "required": [
          "time",
          "amount"
        ],
        "properties": {
          "_id": {
            "description": "Id of entry",
            "example": "67a77c49677ee8b875a0595f"
          },
          "time": {
            "description": "Time of water intake",
            "type": "string",
            "format": "YYYY-MM-DD-HH:MM",
            "example": "1970-01-01-06:30"
          },
          "amount": {
            "description": "Amount of water intake",
            "type": "number",
            "minimum": 50,
            "maximum": 5000,
            "example": 330
          }
        }
      },
      "today": {
        "type": "object",
        "properties": {
          "dailyGoal": {
            "type": "integer",
            "description": "User's daily water goal in milliliters",
            "example": 2000
          },
          "progress": {
            "type": "string",
            "description": "Current water progress",
            "example": "26%"
          },
          "entries": {
            "type": "array",
            "description": "List of water intake entries",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of entry",
                  "example": "67a745da8e88d714522e8dca"
                },
                "time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the entry",
                  "example": "2025-02-05T12:33:00Z"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount of water consumed",
                  "example": 500
                }
              }
            }
          }
        }
      },
      "month": {
        "type": "object",
        "properties": {
          "date": {
            "description": "Monthly statistics",
            "type": "string",
            "example": "10,February"
          },
          "dailyGoal": {
            "description": "The daily norm of the given day",
            "type": "string",
            "example": "2.O L"
          },
          "percentage": {
            "description": "Calculation of the percentage of water drunk in accordance with the norm of a given day",
            "type": "string",
            "example": "28%"
          },
          "entriesCount": {
            "description": "Number of water records",
            "type": "number",
            "example": 3
          }
        }
      },
      "dailyGoal": {
        "type": "object",
        "required": [
          "dailyGoal"
        ],
        "properties": {
          "dailyGoal": {
            "description": "User water daily Goal",
            "type": "number",
            "example": 50
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid parameters. Please check your request."
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Request not found!"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong on the server"
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "Problem with external server Cloudinary: Some error occurred.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Problem with external server Cloudinary: Some error occurred."
                }
              }
            }
          }
        }
      }
    }
  }
}